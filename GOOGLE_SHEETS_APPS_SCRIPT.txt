function doGet(e) {
  const ss = SpreadsheetApp.getActive();
  const sh = ss.getSheetByName('Dashboard');
  const values = sh.getDataRange().getValues();
  const headers = values.shift();
  const rows = values.map((r, i) => {
    const obj = {};
    headers.forEach((h, j) => obj[h] = r[j]);
    obj.rowId = i + 2; // first data row index
    return obj;
  });
  return ContentService.createTextOutput(JSON.stringify(rows)).setMimeType(ContentService.MimeType.JSON);
}

function doPost(e) {
  const payload = JSON.parse(e.postData.contents || '{}');
  const ss = SpreadsheetApp.getActive();
  const dash = ss.getSheetByName('Dashboard');
  const hist = ss.getSheetByName('History') || ss.insertSheet('History');

  if (payload.action === 'update') {
    const rowId = Number(payload.rowId);
    const currentScore = Number(payload.currentScore);
    const ts = payload.ts ? new Date(payload.ts) : new Date();
    const signals = payload.signals || {};
    // Columns: Client | Store | Product Name | Product URL | Platform | Current Score | Last Audit | Notes | RowId
    dash.getRange(rowId, 6).setValue(currentScore); // Current Score
    dash.getRange(rowId, 7).setValue(ts);           // Last Audit
    hist.appendRow([ts, rowId, currentScore, JSON.stringify(signals)]);
    return ContentService.createTextOutput(JSON.stringify({ ok: true }));
  }

  return ContentService.createTextOutput(JSON.stringify({ ok:false, error:'unknown action' })).setMimeType(ContentService.MimeType.JSON);
}
